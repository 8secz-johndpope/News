/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]

/*应用编译sdk相关版本*/
def build_info = [:]
build_info.min_sdk = 15
build_info.target_sdk = 28
build_info.build_tools = "26.0.2"
build_info.isModel = false //是否组件化编译
build_info.proguard = '../config/proguard-rules.pro'
ext.build_info = build_info
/*应用编译sdk相关版本*/

/*插件信息*/
build_info.grandle = 'com.android.tools.build:gradle:3.3.1'
build_info.realm = 'io.realm:realm-gradle-plugin:5.9.0'
build_info.retrolambda = 'me.tatarka:gradle-retrolambda:3.7.0'
build_info.bintray = 'com.novoda:bintray-release:0.9'
//格式为-->group:module:version
build_info.heaven = 'com.heaven.plugin:heaven:1.0.2'
//Google Guava提供 实用工具类
build_info.guava = 'com.google.guava:guava:18.0'
/*插件信息*/

/*应用信息*/
def app = [:]
app.applicationId = "com.heaven.news"
app.testApplicationId = "com.heaven.news.test"
app.versionCode = 78
app.versionName = "1.0.1"
app.test = "android.support.test.runner.AndroidJUnitRunner"
ext.app = app
/*应用信息*/

/*依赖版本信息*/
def versions = [:]
/*********************uiversion*******************/
versions.viewExtraVersion = "28.0.0"
versions.constraintVersion = "1.0.2"
versions.glideVersion = "4.9.0"
versions.styleableToastVersion = "1.0.6"
versions.daggerVersion = '2.17'
versions.butterKnifeVersion = '7.0.1'
versions.lifecycle = '1.1.1'
versions.arouterapi = '1.4.1'
versions.aroutercompiler = '1.2.2'

/*********************uiversion*******************/

/*********************otherversion*******************/
versions.rxJavaVersion = '2.2.0'
versions.rxAndroidVersion = '2.0.2'
versions.rxpermissions2Version = '0.8.2'
versions.retrofitVersion = '2.5.0'
versions.okHttpVersion = '3.14.0'
versions.protostuffcoreVersion = '1.6.0'
versions.protostuffruntimeVersion = '1.6.0'

versions.javaxAnnotationVersion = '1.0'
versions.javaxInjectVersion = '1'
versions.gsonVersion = '2.3'
versions.arrowVersion = '1.0.0'

versions.loggerVersion = '2.2.0'
/*********************otherversion*******************/

/*********************TestingVersion******************/
versions.robolectricVersion = '3.1.1'
versions.jUnitVersion = '4.12'
versions.assertJVersion = '1.7.1'
versions.mockitoVersion = '1.9.5'
versions.dexmakerVersion = '1.0'
versions.espressoVersion = '2.0'
versions.testingSupportLibVersion = '0.1'
/*********************TestingVersion******************/
//Development
versions.leakCanaryVersion = '1.3.1'

/*********************ui相关依赖***********************/
def uiDep = [:]
uiDep.appCompat = "com.android.support:appcompat-v7:$versions.viewExtraVersion"
uiDep.design = "com.android.support:design:$versions.viewExtraVersion"
uiDep.support = "com.android.support:support-v4:$versions.viewExtraVersion"
uiDep.cardview = "com.android.support:cardview-v7:$versions.viewExtraVersion"
uiDep.recyclerView = "com.android.support:recyclerview-v7:$versions.viewExtraVersion"
uiDep.vectorDrawable = "com.android.support:support-vector-drawable:$versions.viewExtraVersion"
uiDep.percent = "com.android.support:percent:$versions.viewExtraVersion"
uiDep.constraint = "com.android.support.constraint:constraint-layout:$versions.constraintVersion"
uiDep.androidAnnotations = "com.android.support:support-annotations:$versions.viewExtraVersion"
uiDep.glide = "com.github.bumptech.glide:glide:$versions.glideVersion"
uiDep.glideokhttp = "com.github.bumptech.glide:okhttp3-integration:$versions.glideVersion"
uiDep.glideannotion = "com.github.bumptech.glide:compiler:$versions.glideVersion"
uiDep.daggerCompiler = "com.google.dagger:dagger-compiler:$versions.daggerVersion"
uiDep.dagger = "com.google.dagger:dagger:$versions.daggerVersion"
uiDep.butterKnife = "com.jakewharton:butterknife:$versions.butterKnifeVersion"
uiDep.styleableToast = "com.muddzdev:styleabletoast:$versions.styleableToastVersion"
uiDep.exoplayer = 'com.google.android.exoplayer:exoplayer:2.8.0'
uiDep.arouterapi = "com.alibaba:arouter-api:$versions.arouterapi"
uiDep.aroutercompiler = "com.alibaba:arouter-compiler:$versions.aroutercompiler"

def archDep = [:]
archDep.extensions = "android.arch.lifecycle:extensions:$versions.lifecycle"
archDep.compiler = "android.arch.lifecycle:compiler:$versions.lifecycle"


def uiTestDep = [:]
uiTestDep.mockito = "org.mockito:mockito-core:$versions.mockitoVersion"
uiTestDep.dexmaker = "com.google.dexmaker:dexmaker:$versions.dexmakerVersion"
uiTestDep.dexmakerMockito = "com.google.dexmaker:dexmaker-mockito:$versions.dexmakerVersion"
uiTestDep.espresso = "com.android.support.test.espresso:espresso-core:$versions.espressoVersion"
uiTestDep.testingSupportLib = "com.android.support.test:testing-support-lib:$versions.testingSupportLibVersion"
/*********************ui相关依赖***********************/

/*********************业务层相关依赖***********************/
def domainDep = [:]
domainDep.javaxAnnotation = "javax.annotation:jsr250-api:$versions.javaxAnnotationVersion"
domainDep.javaxInject = "javax.inject:javax.inject:$versions.javaxInjectVersion"
domainDep.rxJava = "io.reactivex.rxjava2:rxjava:$versions.rxJavaVersion"
domainDep.arrow = "com.fernandocejas:arrow:$versions.arrowVersion"

def domainTestDep = [:]
domainTestDep.junit = "junit:junit:$versions.jUnitVersionversions"
domainTestDep.mockito = "org.mockito:mockito-core:$versions.mockitoVersion"
domainTestDep.assertj = "org.assertj:assertj-core:$versions.assertJVersion"
/*********************业务层相关依赖***********************/

/*********************网络层相关依赖***********************/
def netDep = [:]
netDep.daggerCompiler = "com.google.dagger:dagger-compiler:$versions.daggerVersion"
netDep.dagger = "com.google.dagger:dagger:$versions.daggerVersion"
netDep.okHttp = "com.squareup.okhttp3:okhttp:$versions.okHttpVersion"
netDep.gson = "com.google.code.gson:gson:$versions.gsonVersion"
netDep.rxJavaAdapter = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofitVersion"
netDep.rxAndroid = "io.reactivex.rxjava2:rxandroid:$versions.rxAndroidVersion"
netDep.rxpermissions2 = "com.tbruyelle.rxpermissions2:rxpermissions:${versions.rxpermissions2Version}@aar"
netDep.javaxInject = "javax.inject:javax.inject:$versions.javaxInjectVersion"
netDep.androidAnnotations = "com.android.support:support-annotations:$versions.viewExtraVersion"
netDep.retrofit = "com.squareup.retrofit2:retrofit:$versions.retrofitVersion"
netDep.convertergson = "com.squareup.retrofit2:converter-gson:$versions.retrofitVersion"
netDep.converterprotobuf = "com.squareup.retrofit2:converter-protobuf:$versions.retrofitVersion"
netDep.converterxml = "com.squareup.retrofit2:converter-simplexml:$versions.retrofitVersion"
netDep.protostuffcore = "io.protostuff:protostuff-core:$versions.protostuffcoreVersion"
netDep.protostuffruntime = "io.protostuff:protostuff-runtime:$versions.protostuffruntimeVersion"
netDep.logger = "com.orhanobut:logger:$versions.loggerVersion"
netDep.loggingInterceptor = "com.squareup.okhttp3:logging-interceptor:$versions.okHttpVersion"
netDep.soap = "javax.xml.soap:org.glassfish:'3.1.1'"

def netTestDep = [:]
netTestDep.junit = "junit:junit:$versions.jUnitVersion"
netTestDep.assertj = "org.assertj:assertj-core:$versions.assertJVersion"
netTestDep.mockito = "org.mockito:mockito-core:$versions.mockitoVersion"
netTestDep.robolectric = "org.robolectric:robolectric:$versions.robolectricVersion"
/*********************网络层相关依赖***********************/

def developmentDep = [:]
developmentDep.leakCanary = "com.squareup.leakcanary:leakcanary-android:$versions.leakCanaryVersion"
developmentDep.stetho = 'com.facebook.stetho:stetho:1.5.0'
developmentDep.stethoOkhttp = 'com.facebook.stetho:stetho-okhttp3:1.5.0'

ext.archDep = archDep
ext.uiDep = uiDep
ext.uiTestDep = uiTestDep
ext.domainDep = domainDep
ext.domainTestDep = domainTestDep
ext.netDep = netDep
ext.netTestDep = netTestDep
ext.developmentDep = developmentDep


def static addRepos(RepositoryHandler handler) {

//    handler.maven {
//        url 'https://maven.google.com/'
//        name 'Google'
//    }
//    handler.maven{url '/Users/heaven/Downloads/Jcenter_plugin/heaven/repo'}
    handler.jcenter()
    handler.google()
    handler.maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    handler.maven { url 'https://oss.jfrog.org/libs-snapshot' }
    handler.maven { url 'https://bintray.com/heavenisme/maven' }
    handler.maven { url "https://jitpack.io" }
    handler.mavenCentral()

}

static def releaseTime() {
    return new Date().format("yyyyMMddHHmm", TimeZone.getTimeZone("UTC"))
}
static def buildTime() {
    return new Date().format("yyyy_MM_dd_HHmm", TimeZone.getTimeZone("UTC"))
}

static def hostName() {
    return System.getProperty("user.name") + "@" + InetAddress.localHost.hostName
}

def revision() {
    def code = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = code
    }
    return code.toString()
}

ext.addRepos = this.&addRepos
ext.releaseTime = this.&releaseTime
ext.buildTime = this.&buildTime
ext.hostName = this.&hostName
ext.revision = this.&revision
